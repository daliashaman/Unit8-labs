// Generated by https://quicktype.io
//model - taking a real world problem and issue and taking that data, organizing it, and displaying it

export interface Weather {
    "@context": Array<ContextClass | string>;
    type:       string;
    geometry:   Geometry;
    properties: Properties;
}

export interface ContextClass {
    "@version": string;
    wx:         string;
    geo:        string;
    unit:       string;
    "@vocab":   string;
}

export interface Geometry {
    type:        string;
    coordinates: Array<Array<number[]>>;
}

export interface Properties {
    updated:           string;
    units:             string;
    forecastGenerator: string;
    generatedAt:       string;
    updateTime:        string;
    validTimes:        string;
    elevation:         Elevation;
    periods:           Period[];
}

export interface Elevation {
    unitCode: string;
    value:    number;
}

export interface Period {
    number:           number;
    name:             string;
    startTime:        string;
    endTime:          string;
    isDaytime:        boolean;
    temperature:      number;
    temperatureUnit:  TemperatureUnit;
    temperatureTrend: null | string;
    windSpeed:        string;
    windDirection:    string;
    icon:             string;
    shortForecast:    string;
    detailedForecast: string;
}

export enum TemperatureUnit {
    F = "F",
}


// Image result for what is an enum typescript
// In TypeScript, enums, or enumerated types, are data structures of constant length that hold a set of constant values.
// Each of these constant values is known as a member of the enum. 
// Enums are useful when setting properties or values that can only be a certain number of possible values.J